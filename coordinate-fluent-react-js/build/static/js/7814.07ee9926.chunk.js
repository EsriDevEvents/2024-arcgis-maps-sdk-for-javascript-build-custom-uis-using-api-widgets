"use strict";(self.webpackChunkcoordinate=self.webpackChunkcoordinate||[]).push([[7814],{77814:(t,o,i)=>{i.r(o),i.d(o,{submitValidateNetworkTopologyJob:()=>d,validateNetworkTopology:()=>r});var e=i(3825),a=i(50076),n=i(54994),s=i(11187);async function r(t,o,i){var a,r;const d=(0,n.Dl)(t),l=o.toJSON();o.validationSet&&(l.validationSet=JSON.stringify(o.validationSet));const u={...l,returnEdits:!0,f:"json"},c=(0,n.lF)({...d.query,...u}),v=(0,n.jV)(c,{...i,method:"post"}),y="".concat(d.path,"/validateNetworkTopology"),{data:p}=await(0,e.A)(y,v),g=s.A.fromJSON(p);return g.serviceEdits=null!==(a=null===(r=g.serviceEdits)||void 0===r?void 0:r.map((t=>({layerId:t.id,editedFeatures:t.editedFeatures}))))&&void 0!==a?a:[],g}async function d(t,o,i){if(!o.gdbVersion)throw new a.A("submit-validate-network-topology-job:missing-gdb-version","version is missing");const s=(0,n.Dl)(t),r=o.toJSON();o.validationSet&&(r.validationSet=JSON.stringify(o.validationSet));const d=(0,n.jV)(s.query,{query:(0,n.lF)({...r,returnEdits:!0,async:!0,f:"json"}),...i,method:"post"}),l="".concat(s.path,"/validateNetworkTopology"),{data:u}=await(0,e.A)(l,d);return u?u.statusUrl:null}}}]);
//# sourceMappingURL=7814.07ee9926.chunk.js.map